<?xml version="1.0" encoding="UTF-8"?>
<section id="index"><?dbhtml dir="console" ?>
	<title>JavaScript Console</title>
	<section id="console.personal">
		<title>personal 管理</title>
		<section id="console.personal.newAccount">
			<title>创建账号</title>
			<screen>
				<![CDATA[
> personal.newAccount()
Passphrase: 
Repeat passphrase: 
"0x83fda0ba7e6cfa8d7319d78fa0e6b753a2bcb5a6"				
				]]>
			</screen>
			<para>指定密码创建用户</para>
			<screen>
				<![CDATA[
personal.newAccount("123")				
				]]>
			</screen>

		</section>
		<section id="console.personal.listAccounts">
			<title>列出账号</title>
			<para>列出所有账号</para>
			<screen>
				<![CDATA[
> personal.listAccounts
["0x83fda0ba7e6cfa8d7319d78fa0e6b753a2bcb5a6", "0xe8abf98484325fd6afc59b804ac15804b978e607"]				
				]]>
			</screen>
			<para>列出指定账号</para>
			<screen>
				<![CDATA[
> personal.listAccounts[1]
"0xe8abf98484325fd6afc59b804ac15804b978e607"

> personal.listAccounts[0]
"0x83fda0ba7e6cfa8d7319d78fa0e6b753a2bcb5a6"				
				]]>
			</screen>

		</section>
		<section id="console.personal.unlockAccount">
			<title>解锁账号</title>
			<screen>
				<![CDATA[
 > personal.unlockAccount(eth.accounts[0],"password")						
				]]>
			</screen>
			<para>指定过期时间，单位是毫秒，下面例子是 20 分钟</para>
			<screen>
				<![CDATA[
> personal.unlockAccount(eth.accounts[0],"password", 1000*60*20)				
				]]>
			</screen>
		</section>
	</section>
	<section id="console.eth">
		<title>eth 管理</title>
		<section id="console.eth.coinbase">
			<title>矿工账号</title>
			<para>查看默认旷工账号，系统中的第一个账号。</para>
			<screen>
				<![CDATA[
> eth.coinbase
"0x83fda0ba7e6cfa8d7319d78fa0e6b753a2bcb5a6"				
				]]>
			</screen>
			<para>查看账号列表</para>
			<screen>
				<![CDATA[
> eth.accounts
["0x83fda0ba7e6cfa8d7319d78fa0e6b753a2bcb5a6", "0xe8abf98484325fd6afc59b804ac15804b978e607"]	

> eth.accounts[0]
"0x83fda0ba7e6cfa8d7319d78fa0e6b753a2bcb5a6"			
				]]>
			</screen>
		</section>
		<section id="console.eth.getBalance">
			<title>余额</title>
			<screen>
				<![CDATA[
> eth.getBalance(eth.accounts[0])
70000000000000000000
				]]>
			</screen>
			<section>
				<title>单位转换</title>
				<para>eth.getBalance()返回的余额是以太币的最小面额wei，将wei转换为以太币ether。</para>
				<programlisting>
					<![CDATA[
primary = eth.accounts[0]
balance = web3.fromWei(eth.getBalance(primary), "ether");	
					]]>
				</programlisting>
				<para>演示</para>
				<screen>
					<![CDATA[
> primary = eth.accounts[0]
"0x83fda0ba7e6cfa8d7319d78fa0e6b753a2bcb5a6"
> balance = web3.fromWei(eth.getBalance(primary), "ether");
70			
					]]>
				</screen>
			</section>
			<section>
				<title>一次检查所有账号余额</title>
				<para>定义函数</para>
				<programlisting>
					<![CDATA[
function checkAllBalances() {
  web3.eth.getAccounts(function(err, accounts) {
   accounts.forEach(function(id) {
    web3.eth.getBalance(id, function(err, balance) {
     console.log("" + id + ":\tbalance: " + web3.fromWei(balance, "ether") + " ether");
   });
  });
 });
};					
					]]>
				</programlisting>
				<para>运行函数</para>
				<screen>
					<![CDATA[
checkAllBalances()					
					]]>
				</screen>
				<para>输出演示</para>
				<screen>
					<![CDATA[
> function checkAllBalances() {
...   web3.eth.getAccounts(function(err, accounts) {
.........    accounts.forEach(function(id) {
...............     web3.eth.getBalance(id, function(err, balance) {
.....................      console.log("" + id + ":\tbalance: " + web3.fromWei(balance, "ether") + " ether");
.....................    });
...............   });
.........  });
... };
undefined
> checkAllBalances()
0x83fda0ba7e6cfa8d7319d78fa0e6b753a2bcb5a6:	balance: 929 ether
0xe8abf98484325fd6afc59b804ac15804b978e607:	balance: 11 ether
undefined					
					]]>
				</screen>
			</section>
		</section>
		<section id="console.eth.sendTransaction">
			<title>转账</title>
			<screen>
				<![CDATA[
personal.unlockAccount("0x83fda0ba7e6cfa8d7319d78fa0e6b753a2bcb5a6", "", 300)	
eth.sendTransaction({from: '0x83fda0ba7e6cfa8d7319d78fa0e6b753a2bcb5a6', to: '0xe8abf98484325fd6afc59b804ac15804b978e607', value: web3.toWei(1, "ether")})
				]]>
			</screen>
			<screen>
				<![CDATA[
默认矿工账号
				
> eth.coinbase
"0x83fda0ba7e6cfa8d7319d78fa0e6b753a2bcb5a6"

查看系统中的账号，如果没有请参考上面章节创建

> eth.accounts
["0x83fda0ba7e6cfa8d7319d78fa0e6b753a2bcb5a6", "0xe8abf98484325fd6afc59b804ac15804b978e607"]

转出账号中又 285 个以太币

> web3.fromWei(eth.getBalance(eth.accounts[0]))
285

转入账号目前是 0 

> web3.fromWei(eth.getBalance(eth.accounts[1]))
0

解锁传出账号，否则不能转出。personal.unlockAccount(账号, 密码, 300)

> personal.unlockAccount("0x83fda0ba7e6cfa8d7319d78fa0e6b753a2bcb5a6", "", 300)
true

转账操作

> eth.sendTransaction({from: '0x83fda0ba7e6cfa8d7319d78fa0e6b753a2bcb5a6', to: '0xe8abf98484325fd6afc59b804ac15804b978e607', value: web3.toWei(10, "ether")})
"0xb0674a7fee52555d8712f3a1f0f30fbbbf67ff7b5b4b53ab5d131262613215c6"

如果你现在查看转入账号，你会发现余额仍然是 0 ，交易还未成功写进区块，写进区块的方式是挖矿，所以你必须执行挖矿

> miner.start(1)
null

稍后几分钟，再次查看转入账号，将会看到有10个以太币入账。传出账号会减少10个以太币，同时仍然继续挖矿中。

> web3.fromWei(eth.getBalance(eth.accounts[1]))
10
				]]>
			</screen>

			<para>从账号0想账号1转账</para>
			<screen>
				<![CDATA[
> personal.unlockAccount(eth.accounts[0],"password",50000)
true
> eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[1], value: web3.toWei(1, "ether")})				
				]]>
			</screen>
		</section>
		<section id="console.eth.pendingTransactions">
			<title>查看挂起的交易</title>
			<screen>
				<![CDATA[
> eth.pendingTransactions
[{
    blockHash: null,
    blockNumber: null,
    from: "0x5fba50fce50baf0b8a7314200ba46336958ac97e",
    gas: 90000,
    gasPrice: 20000000000,
    hash: "0x51a75422f79fa96e70a0c1481851bc9f827868c44203b68d74f9815ffb367d5f",
    input: "0x",
    nonce: 0,
    r: "0x5632a8ade4a767dbd949ba1042cb33f98dd0722ab999ba18e1454d19d8bd1f6d",
    s: "0x515dcfa3de297f0c956ad9a061a5561f47cc9ccbb0a547cda59193c77fcbe3f7",
    to: "0x0a8c35653d8b229c16f0c9ce6f63cffb877cfdcf",
    transactionIndex: 0,
    v: "0x42",
    value: 1000000000000000000
}]				
				]]>
			</screen>
			<para>如果返回空值，表示交易全部完成。</para>
			<screen>
				<![CDATA[
> eth.pendingTransactions
[]				
				]]>
			</screen>
		</section>
		<section id="console.eth.blockNumber">
			<title>查看当前区块总数</title>
			<screen>
				<![CDATA[
> eth.blockNumber 
719			
				]]>
			</screen>
		</section>
		<section id="console.eth.getBlock">
			<title>查看区块信息</title>
			<screen>
				<![CDATA[
> eth.getBlock(1) 
{
  difficulty: 131072,
  extraData: "0xd783010702846765746885676f312e398777696e646f7773",
  gasLimit: 4995119,
  gasUsed: 0,
  hash: "0x62bc2fc0fd647b43013ba75e65a3f16520cebb60cadc0995965c891d4266a88c",
  logsBloom: "0x
  miner: "0xba1821227ebad7e88a51078f6219b392fd601822",
  mixHash: "0x80ad2e29d057e0f6bb9d03f12a252fdc65cb520248fa0023ae6624c997b5d5f2",
  nonce: "0x3d743ef28ba8c8c8",
  number: 1,
  parentHash: "0x611596e7979cd4e7ca1531260fa706093a5492ecbdf58f20a39545397e424d04",
  receiptsRoot: "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
  sha3Uncles: "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
  size: 535,
  stateRoot: "0x418d9f66e33cbd41fd524b87c10c5fc75f8a6360896967d827a2d56a0c8aadda",
  timestamp: 1510715249,
  totalDifficulty: 262144,
  transactions: [],
  transactionsRoot: "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
  uncles: []
}
> eth.getBlock(2)
{
  difficulty: 131072,
  extraData: "0xd783010702846765746885676f312e398777696e646f7773",
  gasLimit: 4990242,
  gasUsed: 0,
  hash: "0x3323c566fd3501c29e8b026c4a9d2e83a8dd62d153a32b5f879120e999013d07",
  logsBloom: "0x
  miner: "0xba1821227ebad7e88a51078f6219b392fd601822",
  mixHash: "0xc415fc64f1bc13842455f8289d33842260c1578a32b5befded5b4293e7a92276",
  nonce: "0x4f4a0e65412663db",
  number: 2,
  parentHash: "0x62bc2fc0fd647b43013ba75e65a3f16520cebb60cadc0995965c891d4266a88c",
  receiptsRoot: "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
  sha3Uncles: "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
  size: 535,
  stateRoot: "0x39ccb22ff5ca19a2340e137fa64acedb704d42827a753780b53a0aff8922e403",
  timestamp: 1510715341,
  totalDifficulty: 393216,
  transactions: [],
  transactionsRoot: "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
  uncles: []
}
				
				]]>
			</screen>
		</section>
		<section id="console.eth.compile">
			<title>查看智能合约编译器</title>
			<screen>
				<![CDATA[
> eth.compile
{
  lll: function(),
  serpent: function(),
  solidity: function()
}				
				]]>
			</screen>
		</section>
	</section>

	<section id="console.web3">
		<title>web3</title>
		<section id="console.web3.fromWei">
			<title>Ether币的基本单位</title>
			<para>Ether币最小的单位是Wei，也是命令行默认的单位, 然后每1000个进一个单位，依次是</para>
			<literallayout>
					<![CDATA[
kwei (1000 Wei)
mwei (1000 KWei)
gwei (1000 mwei)
szabo (1000 gwei)
finney (1000 szabo)
ether (1000 finney)
					]]>
			</literallayout>
			<para>如何进行ether 和 Wei之间的转换，简单地说就是就是1 以太币 = 1000000000000000000 Wei
				（这就是上一站章中为何我们转移0.01个以太币，结果却显示很长的原因）
			</para>
			<para>单位转换</para>
			<screen>
					<![CDATA[
> web3.fromWei(10000000000000000,"ether")
"0.01"				
					]]>
			</screen>

			<section id="console.web3.toWei">
				<title>web3.toWei</title>
				<screen>
						<![CDATA[
Ether–> Wei

> web3.toWei(1)
"1000000000000000000"
> web3.toWei(1.3423423)
"1342342300000000000"
> web3.toWei(0.00034)
"340000000000000"						
						]]>
				</screen>
			</section>
			<section id="console.web3.fromWei">
				<title>web3.fromWei</title>
				<screen>
						<![CDATA[
Wei –> Ether

> web3.fromWei(10000000000000000)
"0.01"
> web3.fromWei(1000000000000000000)
"1"
>
						]]>
				</screen>
			</section>
		</section>

	</section>
	<section id="console.admin">
		<title>admin 管理</title>
		<section>
			<title>看看 networkid</title>
			<screen>
				<![CDATA[
> admin.nodeInfo.protocols.eth.network
123456				
				]]>
			</screen>
		</section>
		<section id="console.admin.node">
			<title>节点管理</title>
			<para>可以通过admin.addPeer()方法连接到其他节点，两个节点要想联通，必须保证网络是相通的，并且要指定相同的networkid
			</para>
			<tip>
				<para>注意去掉 --nodiscover 参数</para>
			</tip>
			<para>确保网络可用</para>
			<screen>
				<![CDATA[
> net.listening
true
				]]>
			</screen>
			<section id="console.admin.nodeInfo">
				<title>显示节点</title>
				<para>显示当前节点信息</para>
				<screen>
					<![CDATA[
> admin.nodeInfo
{
  enode: "enode://9f6490ffb5236f2ddc5710ae73d47c740e0a3644bbd2d67029cf4a6c4693d2f470b642fd2cc3507f7e851df60aaeb730a1270b7a477f91ec5b6b17a8a4b40527@14.103.209.119:30303",
  id: "9f6490ffb5236f2ddc5710ae73d47c740e0a3644bbd2d67029cf4a6c4693d2f470b642fd2cc3507f7e851df60aaeb730a1270b7a477f91ec5b6b17a8a4b40527",
  ip: "14.103.209.119",
  listenAddr: "[::]:30303",
  name: "Geth/v1.7.3-stable-4bb3c89d/linux-amd64/go1.9.1",
  ports: {
    discovery: 30303,
    listener: 30303
  },
  protocols: {
    eth: {
      difficulty: 108754979,
      genesis: "0x611596e7979cd4e7ca1531260fa706093a5492ecbdf58f20a39545397e424d04",
      head: "0x61330b27cfbfaecbb36bb8666cbe0564c1e0bdecfdcd153622d8c2ca2b82786e",
      network: 123456
    }
  }
}					
					]]>
				</screen>
				<para>节点地址</para>
				<screen>
					<![CDATA[
> admin.nodeInfo.enode 
"enode://9f6490ffb5236f2ddc5710ae73d47c740e0a3644bbd2d67029cf4a6c4693d2f470b642fd2cc3507f7e851df60aaeb730a1270b7a477f91ec5b6b17a8a4b40527@[::]:30303?discport=0"
					]]>
				</screen>
				<para>[::] 是 ipv6 地址，可以改为 ipv4 地址。</para>
			</section>
			<section id="console.admin.addPeer">
				<title>添加节点</title>
				<screen>
					<![CDATA[
> admin.addPeer('enode://9f6490ffb5236f2ddc5710ae73d47c740e0a3644bbd2d67029cf4a6c4693d2f470b642fd2cc3507f7e851df60aaeb730a1270b7a477f91ec5b6b17a8a4b40527@172.16.0.1:30303')				
					]]>
				</screen>
			</section>
			<section id="console.admin.peers">
				<title>查看节点</title>
				<para>查看节点数量</para>
				<screen>
					<![CDATA[
> net.peerCount
1					
					]]>
				</screen>
				<para>查看节点地址</para>
				<screen>
					<![CDATA[
> admin.peers
[{
    caps: ["eth/62", "eth/63", "par/1", "par/2", "pip/1"],
    id: "a7bbd8fb72e02681b027908f14fd2dbd80e35a1477d7d9d4dc19ed34420be26fe9f991c83a83e4ab8aa371ffbb149494471f30216bc2f662d1ebc6d01811c7a2",
    name: "Parity/v1.7.12-stable-9b796e8-20180121/x86_64-linux-gnu/rustc1.21.0",
    network: {
      localAddress: "172.16.0.1:34092",
      remoteAddress: "52.67.171.152:30388"
    },
    protocols: {
      eth: "handshake"
    }
}]				
					]]>
				</screen>
				<para>列出节点IP地址</para>
				<screen>
					<![CDATA[
admin.peers.forEach(function(p) {console.log(p.network.remoteAddress);})	
					]]>
				</screen>
			</section>

		</section>
	</section>

	<section id="console.miner">
		<title>miner 挖矿管理</title>
		<section id="console.miner.start">
			<title>开始挖矿</title>
			<screen>
				<![CDATA[
> miner.start(2)
null			
				]]>
			</screen>
			<para>过几分钟后运行</para>
			<screen>
				<![CDATA[
> web3.fromWei(eth.getBalance(eth.coinbase), "ether")
30					
				]]>
			</screen>
			<para>这时我们已经看到已经产生了30个以太币。</para>
		</section>
		<section id="console.miner.stop">
			<title>停止挖矿</title>
			<screen>
				<![CDATA[
> miner.stop()
true
>
				]]>
			</screen>
		</section>
		<section id="console.miner.setEtherbase">
			<title>设置默认矿工账号</title>
			<para>默认挖矿使用系统中的第一个账号，你可以使用 miner.setEtherbase() 指定账号。</para>
			<screen>
				<![CDATA[
> miner.setEtherbase("0x83fda0ba7e6cfa8d7319d78fa0e6b753a2bcb5a6")
true	
				]]>
			</screen>
			<para></para>
			<screen>
				<![CDATA[
> eth.accounts
["0x83fda0ba7e6cfa8d7319d78fa0e6b753a2bcb5a6", "0xe8abf98484325fd6afc59b804ac15804b978e607", "0x013b5e735e1b48421dd3de3b931d6f03e769e22b"]

> eth.coinbase
"0x83fda0ba7e6cfa8d7319d78fa0e6b753a2bcb5a6"


> miner.setEtherbase("0xe8abf98484325fd6afc59b804ac15804b978e607")
true

> eth.coinbase
"0xe8abf98484325fd6afc59b804ac15804b978e607"	
				]]>
			</screen>
		</section>
	</section>
	<section id="console.txpool.status ">
		<title>txpool 管理</title>
		<section>
			<title>txpool.status</title>
			<para>查看状态</para>
			<screen>
				<![CDATA[
> txpool.status 
{
  pending: 0,
  queued: 0
}
				]]>
			</screen>
			<para>例如做一笔转账</para>
			<screen>
				<![CDATA[
> amount = web3.toWei(5,'ether')  
"5000000000000000000"  
> eth.sendTransaction({from:eth.accounts[0],to:eth.accounts[1],value:amount})	

> txpool.status 
{
  pending: 1,
  queued: 0
}

> miner.start(1);admin.sleepBlocks(1);miner.stop(); 

> txpool.status 
{
  pending: 0,
  queued: 0
}

> web3.fromWei(eth.getBalance(eth.accounts[1]),'ether')  
5  
				]]>
			</screen>
		</section>
	</section>
	<section id="console.net">
		<title>net</title>
		<section id="console.net.listening">
			<title>监听状态</title>
			<screen>
				<![CDATA[
> net.listening
true
				]]>
			</screen>
		</section>
	</section>
</section>